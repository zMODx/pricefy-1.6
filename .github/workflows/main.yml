name: Pricefy CI/CD

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]
        mongodb-version: [6.0]
    
    services:
      mongodb:
        image: mongo:${{ matrix.mongodb-version }}
        ports:
          - 27017:27017
        options: >-
          --health-cmd mongosh --eval "db.adminCommand('ping')"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Get npm cache directory
      id: npm-cache-dir
      run: echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT
    
    - name: Cache node modules
      uses: actions/cache@v4
      id: npm-cache
      with:
        path: ${{ steps.npm-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    - name: Install dependencies
      run: npm ci
      
    - name: Cache node_modules
      uses: actions/cache@v4
      with:
        path: node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-modules-
    
    - name: Lint
      run: npm run lint
    
    - name: Create env file
      run: |
        echo "PORT=5000" > .env
        echo "MONGODB_URI=mongodb://localhost:27017/pricefy" >> .env
        echo "JWT_SECRET=github_actions_jwt_secret" >> .env
        echo "NODE_ENV=test" >> .env
    
    - name: Seed database
      run: npm run seed
    
    - name: Build Next.js app
      run: npm run build
    
    - name: Run tests
      run: npm test
      env:
        CI: true
    
    - name: Cache build output
      uses: actions/cache@v4
      with:
        path: .next
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
